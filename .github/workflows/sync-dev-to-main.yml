name: Sync Dev to Main

# Trigger when a pull request to dev branch is closed (merged)
on:
  pull_request:
    types: [closed]
    branches:
      - dev

permissions:
  contents: write
  pull-requests: write

jobs:
  sync-to-main:
    # Only run if the PR was actually merged (not just closed)
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all branches
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Fetch latest changes
        run: |
          git fetch origin dev:dev
          git fetch origin main:main
      
      - name: Checkout main branch
        run: git checkout main
      
      - name: Merge dev into main
        id: merge
        run: |
          echo "Attempting to merge dev into main..."
          if git merge --no-ff dev -m "chore: sync dev to main after PR #${{ github.event.pull_request.number }}"; then
            echo "merge_status=success" >> $GITHUB_OUTPUT
            echo "? Merge successful"
          else
            echo "merge_status=conflict" >> $GITHUB_OUTPUT
            echo "? Merge conflict detected"
            exit 1
          fi
      
      - name: Push to main
        if: steps.merge.outputs.merge_status == 'success'
        run: |
          git push origin main
          echo "? Successfully pushed dev changes to main"
      
      - name: Create comment on PR (success)
        if: steps.merge.outputs.merge_status == 'success'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '? **Auto-sync successful!** Changes from `dev` have been merged into `main`.\n\nCommit: ${{ github.sha }}'
            })
      
      - name: Create comment on PR (failure)
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '? **Auto-sync failed!** There was a conflict merging `dev` into `main`.\n\nPlease manually resolve the conflict and merge.'
            })
      
      - name: Notify on failure
        if: failure()
        run: |
          echo "::error::Failed to sync dev to main. Manual intervention required."
          exit 1
